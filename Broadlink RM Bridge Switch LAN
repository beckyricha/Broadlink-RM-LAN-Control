/**
 *  Broadlink Switch
 *
 *  Copyright 2016 BeckyR
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
metadata {
	definition (name: "RM Bridge Switch LAN", namespace: "beckyricha", author: "BeckyR") {
		capability "Switch"
	}


	// tile definitions
	tiles {
		standardTile("switch", "device.switch", width: 2, height: 2, canChangeIcon: true) {
			state "on", label: '${name}', action: "switch.off", icon: "st.switches.switch.on", backgroundColor: "#79b821"
			state "off", label: '${name}', action: "switch.on", icon: "st.switches.switch.off", backgroundColor: "#ffffff"
		}

		main "switch"
		details "switch"
	}
}
 
def on() {
	log.debug "code running"
    put('on')
   
   
}

def off() {
	put('off')
}
 
private put(toggle) {
	if(state.currentState == null || state.currentState != toggle){
    		def url1="xxx.xxx.x.x:xxxx"
    		def userpassascii= "username:password"
    		def userpass = "Basic " + userpassascii.encodeAsBase64().toString()
    		def toReplace = device.displayName
		def replaced = toReplace.replaceAll(' ', '%20')
 		def hubaction = new physicalgraph.device.HubAction(
			method: "GET",
               		path: "/code/$replaced%20$toggle",
               		headers: [HOST: "${url1}", AUTHORIZATION: "${userpass}"],
               )
   		return hubaction
   	}
   }
